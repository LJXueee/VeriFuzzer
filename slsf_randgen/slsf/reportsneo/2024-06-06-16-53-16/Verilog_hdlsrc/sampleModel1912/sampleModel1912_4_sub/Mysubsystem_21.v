// -------------------------------------------------------------
// 
// File Name: D:\ljx\code\GUIDANCE-ljx3\slsf_randgen\slsf\reportsneo\2024-06-06-16-53-16\Verilog_hdlsrc\sampleModel1912\sampleModel1912_4_sub\Mysubsystem_21.v
// Created: 2024-06-10 17:29:04
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Mysubsystem_21
// Source Path: sampleModel1912_4_sub/Subsystem/Mysubsystem_21
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Mysubsystem_21
          (clk,
           reset,
           enb,
           In1,
           In2,
           Out1,
           Out2);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] In1;  // uint8
  input   [7:0] In2;  // uint8
  output  [7:0] Out1;  // uint8
  output  [7:0] Out2;  // ufix8_En7


  reg [7:0] cfblk139_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk139_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk139_out1;  // uint8
  wire cfblk1_out1;
  wire [7:0] cfblk72_out1;  // ufix8_En7
  reg [7:0] cfblk134_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk134_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk134_out1;  // uint8
  wire [31:0] cfblk110_add_cast;  // ufix32_En7
  wire [31:0] cfblk110_add_cast_1;  // ufix32_En7
  wire [31:0] cfblk110_add_temp;  // ufix32_En7
  wire [7:0] cfblk110_out1;  // uint8


  always @(posedge clk or posedge reset)
    begin : cfblk139_process
      if (reset == 1'b1) begin
        cfblk139_reg[0] <= 8'b00000000;
        cfblk139_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk139_reg[0] <= cfblk139_reg_next[0];
          cfblk139_reg[1] <= cfblk139_reg_next[1];
        end
      end
    end

  assign cfblk139_out1 = cfblk139_reg[1];
  assign cfblk139_reg_next[0] = In1;
  assign cfblk139_reg_next[1] = cfblk139_reg[0];



  cfblk1 u_cfblk1 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .U(cfblk139_out1),  // uint8
                   .Y(cfblk1_out1)
                   );

  assign cfblk72_out1 = {cfblk1_out1, 7'b0000000};



  always @(posedge clk or posedge reset)
    begin : cfblk134_process
      if (reset == 1'b1) begin
        cfblk134_reg[0] <= 8'b00000000;
        cfblk134_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk134_reg[0] <= cfblk134_reg_next[0];
          cfblk134_reg[1] <= cfblk134_reg_next[1];
        end
      end
    end

  assign cfblk134_out1 = cfblk134_reg[1];
  assign cfblk134_reg_next[0] = In2;
  assign cfblk134_reg_next[1] = cfblk134_reg[0];



  assign cfblk110_add_cast = {24'b0, cfblk72_out1};
  assign cfblk110_add_cast_1 = {17'b0, {cfblk134_out1, 7'b0000000}};
  assign cfblk110_add_temp = cfblk110_add_cast + cfblk110_add_cast_1;
  assign cfblk110_out1 = cfblk110_add_temp[14:7];



  assign Out1 = cfblk110_out1;

  assign Out2 = cfblk72_out1;

endmodule  // Mysubsystem_21


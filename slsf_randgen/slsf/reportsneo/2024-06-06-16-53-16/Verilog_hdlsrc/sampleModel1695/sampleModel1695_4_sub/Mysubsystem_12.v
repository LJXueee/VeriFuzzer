// -------------------------------------------------------------
// 
// File Name: D:\ljx\code\GUIDANCE-ljx3\slsf_randgen\slsf\reportsneo\2024-06-06-16-53-16\Verilog_hdlsrc\sampleModel1695\sampleModel1695_4_sub\Mysubsystem_12.v
// Created: 2024-08-13 17:17:40
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Mysubsystem_12
// Source Path: sampleModel1695_4_sub/Subsystem/Mysubsystem_12
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Mysubsystem_12
          (clk,
           reset,
           enb,
           In1,
           In2,
           Out1,
           Y,
           Out3);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] In1;  // uint8
  input   [7:0] In2;  // uint8
  output  [7:0] Out1;  // uint8
  output  Y;
  output  [7:0] Out3;  // uint8


  reg [7:0] cfblk147_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk147_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk147_out1;  // uint8
  wire cfblk1_out1;
  reg [7:0] cfblk151_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk151_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk151_out1;  // uint8
  wire signed [31:0] cfblk121_sub_temp;  // sfix32
  wire signed [31:0] cfblk121_1;  // sfix32
  wire signed [31:0] cfblk121_2;  // sfix32
  wire [7:0] cfblk121_out1;  // uint8
  wire [7:0] cfblk57_out1;  // uint8
  wire [7:0] dtc_out;  // ufix8
  wire [7:0] cfblk67_out1;  // uint8


  always @(posedge clk or posedge reset)
    begin : cfblk147_process
      if (reset == 1'b1) begin
        cfblk147_reg[0] <= 8'b00000000;
        cfblk147_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk147_reg[0] <= cfblk147_reg_next[0];
          cfblk147_reg[1] <= cfblk147_reg_next[1];
        end
      end
    end

  assign cfblk147_out1 = cfblk147_reg[1];
  assign cfblk147_reg_next[0] = In1;
  assign cfblk147_reg_next[1] = cfblk147_reg[0];



  cfblk1 u_cfblk1 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .U(cfblk147_out1),  // uint8
                   .Y(cfblk1_out1)
                   );

  always @(posedge clk or posedge reset)
    begin : cfblk151_process
      if (reset == 1'b1) begin
        cfblk151_reg[0] <= 8'b00000000;
        cfblk151_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk151_reg[0] <= cfblk151_reg_next[0];
          cfblk151_reg[1] <= cfblk151_reg_next[1];
        end
      end
    end

  assign cfblk151_out1 = cfblk151_reg[1];
  assign cfblk151_reg_next[0] = In2;
  assign cfblk151_reg_next[1] = cfblk151_reg[0];



  assign cfblk121_1 = {31'b0, cfblk1_out1};
  assign cfblk121_2 = {24'b0, cfblk151_out1};
  assign cfblk121_sub_temp = cfblk121_1 - cfblk121_2;
  assign cfblk121_out1 = cfblk121_sub_temp[7:0];



  assign cfblk57_out1 = (cfblk121_out1 > 8'b00000000 ? 8'b00000001 :
              8'b00000000);



  assign Out1 = cfblk57_out1;

  assign Y = cfblk1_out1;

  assign dtc_out = cfblk57_out1;



  assign cfblk67_out1 = dtc_out;



  assign Out3 = cfblk67_out1;

endmodule  // Mysubsystem_12


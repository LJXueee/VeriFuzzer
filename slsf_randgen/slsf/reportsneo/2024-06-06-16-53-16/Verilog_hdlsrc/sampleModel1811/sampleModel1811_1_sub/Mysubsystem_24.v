// -------------------------------------------------------------
// 
// File Name: D:\ljx\code\GUIDANCE-ljx3\slsf_randgen\slsf\reportsneo\2024-06-06-16-53-16\Verilog_hdlsrc\sampleModel1811\sampleModel1811_1_sub\Mysubsystem_24.v
// Created: 2024-08-14 12:30:29
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Mysubsystem_24
// Source Path: sampleModel1811_1_sub/Subsystem/Mysubsystem_24
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Mysubsystem_24
          (clk,
           reset,
           enb,
           In1,
           In2,
           In3,
           Out1,
           Out2,
           Y);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] In1;  // uint8
  input   [7:0] In2;  // uint8
  input   [7:0] In3;  // uint8
  output  signed [7:0] Out1;  // sfix8_E1
  output  signed [7:0] Out2;  // sfix8_E1
  output  Y;


  reg [7:0] cfblk158_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk158_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk158_out1;  // uint8
  reg [7:0] cfblk160_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk160_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk160_out1;  // uint8
  wire cfblk1_out1;
  wire signed [7:0] cfblk52_out1;  // int8
  reg [7:0] cfblk139_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk139_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk139_out1;  // uint8
  wire signed [31:0] cfblk70_add_temp;  // sfix32
  wire signed [31:0] cfblk70_1;  // sfix32
  wire signed [31:0] cfblk70_2;  // sfix32
  wire signed [7:0] cfblk70_out1;  // sfix8_E1
  wire signed [31:0] cfblk13_sub_cast;  // sfix32
  wire signed [31:0] cfblk13_sub_temp;  // sfix32
  wire signed [31:0] cfblk13_1;  // sfix32
  wire signed [7:0] cfblk13_out1;  // sfix8_E1


  always @(posedge clk or posedge reset)
    begin : cfblk158_process
      if (reset == 1'b1) begin
        cfblk158_reg[0] <= 8'b00000000;
        cfblk158_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk158_reg[0] <= cfblk158_reg_next[0];
          cfblk158_reg[1] <= cfblk158_reg_next[1];
        end
      end
    end

  assign cfblk158_out1 = cfblk158_reg[1];
  assign cfblk158_reg_next[0] = In1;
  assign cfblk158_reg_next[1] = cfblk158_reg[0];



  always @(posedge clk or posedge reset)
    begin : cfblk160_process
      if (reset == 1'b1) begin
        cfblk160_reg[0] <= 8'b00000000;
        cfblk160_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk160_reg[0] <= cfblk160_reg_next[0];
          cfblk160_reg[1] <= cfblk160_reg_next[1];
        end
      end
    end

  assign cfblk160_out1 = cfblk160_reg[1];
  assign cfblk160_reg_next[0] = In3;
  assign cfblk160_reg_next[1] = cfblk160_reg[0];



  cfblk1 u_cfblk1 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .U(cfblk160_out1),  // uint8
                   .Y(cfblk1_out1)
                   );

  assign cfblk52_out1 = (cfblk1_out1 > 1'b0 ? 8'sb00000001 :
              8'sb00000000);



  always @(posedge clk or posedge reset)
    begin : cfblk139_process
      if (reset == 1'b1) begin
        cfblk139_reg[0] <= 8'b00000000;
        cfblk139_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk139_reg[0] <= cfblk139_reg_next[0];
          cfblk139_reg[1] <= cfblk139_reg_next[1];
        end
      end
    end

  assign cfblk139_out1 = cfblk139_reg[1];
  assign cfblk139_reg_next[0] = In2;
  assign cfblk139_reg_next[1] = cfblk139_reg[0];



  assign cfblk70_1 = {{24{cfblk52_out1[7]}}, cfblk52_out1};
  assign cfblk70_2 = {24'b0, cfblk139_out1};
  assign cfblk70_add_temp = cfblk70_1 + cfblk70_2;
  assign cfblk70_out1 = cfblk70_add_temp[8:1];



  assign cfblk13_sub_cast = {{23{cfblk70_out1[7]}}, {cfblk70_out1, 1'b0}};
  assign cfblk13_1 = {24'b0, cfblk158_out1};
  assign cfblk13_sub_temp = cfblk13_1 - cfblk13_sub_cast;
  assign cfblk13_out1 = cfblk13_sub_temp[8:1];



  assign Out1 = cfblk13_out1;

  assign Out2 = cfblk70_out1;

  assign Y = cfblk1_out1;

endmodule  // Mysubsystem_24


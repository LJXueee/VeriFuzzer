// -------------------------------------------------------------
// 
// File Name: D:\ljx\code\GUIDANCE-ljx3\slsf_randgen\slsf\reportsneo\2024-06-06-16-53-16\Verilog_hdlsrc\sampleModel1911\sampleModel1911_3_sub\Subsystem.v
// Created: 2024-07-02 12:40:11
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1
// Target subsystem base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// Hdl_out                       ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Subsystem
// Source Path: sampleModel1911_3_sub/Subsystem
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Subsystem
          (clk,
           reset,
           clk_enable,
           ce_out,
           Hdl_out);


  input   clk;
  input   reset;
  input   clk_enable;
  output  ce_out;
  output  [7:0] Hdl_out;  // uint8


  wire enb;
  wire [7:0] cfblk9_const_val_1;  // uint8
  wire [7:0] cfblk72_const_val_1;  // uint8
  wire [7:0] cfblk120_const_val_1;  // uint8
  wire [7:0] cfblk63_const_val_1;  // uint8
  wire [7:0] cfblk39_const_val_1;  // uint8
  wire [7:0] cfblk80_const_val_1;  // uint8
  wire [7:0] Mysubsystem_30_out1;  // uint8
  wire [7:0] cfblk65_const_val_1;  // uint8
  wire [7:0] cfblk65_out1;  // uint8
  wire [7:0] cfblk84_out1;  // uint8
  wire [7:0] Mysubsystem_24_out1;  // uint8
  wire [7:0] cfblk1_out1;  // uint8
  wire [7:0] cfblk72_out1;  // uint8
  wire [7:0] cfblk129_out1;  // uint8
  wire [7:0] cfblk117_out1;  // uint8
  wire [7:0] cfblk103_out1;  // uint8
  wire [7:0] cfblk80_out1;  // uint8
  wire [7:0] cfblk70_out1;  // uint8
  wire [7:0] cfblk111_out1;  // uint8
  wire [7:0] cfblk10_out1;  // uint8
  wire [7:0] cfblk96_out1;  // uint8
  wire [7:0] cfblk33_out1;  // uint8
  wire [7:0] cfblk123_out1;  // uint8
  wire [7:0] cfblk120_out1;  // uint8
  wire [7:0] cfblk13_out1;  // uint8
  wire [7:0] cfblk106_out1;  // uint8
  reg [7:0] cfblk137_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk137_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk137_out1;  // uint8
  wire [7:0] cfblk98_out1;  // uint8
  wire [7:0] cfblk4_out1;  // uint8
  wire [7:0] cfblk63_out1;  // uint8
  reg [7:0] cfblk138_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk138_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk138_out1;  // uint8
  wire [7:0] cfblk104_out1;  // uint8
  wire [7:0] cfblk9_out1;  // uint8
  reg [7:0] cfblk136_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk136_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk136_out1;  // uint8
  wire [7:0] cfblk39_out1;  // uint8
  wire [7:0] cfblk51_out1;  // uint8
  wire [7:0] dtc_out;  // ufix8
  wire [7:0] cfblk22_out1;  // uint8


  assign cfblk9_const_val_1 = 8'b00000000;



  assign cfblk72_const_val_1 = 8'b00000000;



  assign enb = clk_enable;

  assign cfblk120_const_val_1 = 8'b00000000;



  assign cfblk63_const_val_1 = 8'b00000000;



  assign cfblk39_const_val_1 = 8'b00000000;



  assign cfblk80_const_val_1 = 8'b00000000;



  Mysubsystem_30 u_Mysubsystem_30 (.Out1(Mysubsystem_30_out1)  // uint8
                                   );

  assign cfblk65_const_val_1 = 8'b00000000;



  assign cfblk65_out1 = Mysubsystem_30_out1 + cfblk65_const_val_1;



  Mysubsystem_24 u_Mysubsystem_24 (.clk(clk),
                                   .reset(reset),
                                   .enb(clk_enable),
                                   .In1(cfblk84_out1),  // uint8
                                   .Out1(Mysubsystem_24_out1)  // uint8
                                   );

  cfblk1 u_cfblk1 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .U(Mysubsystem_24_out1),  // uint8
                   .Y(cfblk1_out1)  // uint8
                   );

  cfblk129 u_cfblk129 (.In1(cfblk72_out1),  // uint8
                       .Out1(cfblk129_out1)  // uint8
                       );

  assign cfblk103_out1 = cfblk117_out1 + cfblk129_out1;



  assign cfblk70_out1 = cfblk80_out1 + cfblk103_out1;



  DotProduct u_cfblk10_inst (.in1(cfblk70_out1),  // uint8
                             .in2(cfblk111_out1),  // uint8
                             .out1(cfblk10_out1)  // uint8
                             );

  assign cfblk96_out1 = (cfblk10_out1 > 8'b00000000 ? 8'b00000001 :
              8'b00000000);



  assign cfblk123_out1 = cfblk96_out1 + cfblk33_out1;



  DotProduct_block1 u_cfblk13_inst (.in1(cfblk120_out1),  // uint8
                                    .in2(cfblk123_out1),  // uint8
                                    .out1(cfblk13_out1)  // uint8
                                    );

  assign cfblk106_out1 = cfblk13_out1 + cfblk1_out1;



  always @(posedge clk or posedge reset)
    begin : cfblk137_process
      if (reset == 1'b1) begin
        cfblk137_reg[0] <= 8'b00000000;
        cfblk137_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk137_reg[0] <= cfblk137_reg_next[0];
          cfblk137_reg[1] <= cfblk137_reg_next[1];
        end
      end
    end

  assign cfblk137_out1 = cfblk137_reg[1];
  assign cfblk137_reg_next[0] = cfblk106_out1;
  assign cfblk137_reg_next[1] = cfblk137_reg[0];



  DotProduct_block2 u_cfblk98_inst (.in1(cfblk137_out1),  // uint8
                                    .in2(cfblk123_out1),  // uint8
                                    .out1(cfblk98_out1)  // uint8
                                    );

  assign cfblk4_out1 = cfblk98_out1 & 8'b11111110;



  assign cfblk120_out1 = cfblk4_out1 + cfblk120_const_val_1;



  assign cfblk63_out1 = cfblk120_out1 + cfblk63_const_val_1;



  always @(posedge clk or posedge reset)
    begin : cfblk138_process
      if (reset == 1'b1) begin
        cfblk138_reg[0] <= 8'b00000000;
        cfblk138_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk138_reg[0] <= cfblk138_reg_next[0];
          cfblk138_reg[1] <= cfblk138_reg_next[1];
        end
      end
    end

  assign cfblk138_out1 = cfblk138_reg[1];
  assign cfblk138_reg_next[0] = cfblk63_out1;
  assign cfblk138_reg_next[1] = cfblk138_reg[0];



  assign cfblk104_out1 = cfblk138_out1 + cfblk1_out1;



  assign cfblk9_out1 = cfblk33_out1 + cfblk9_const_val_1;



  assign cfblk72_out1 = cfblk9_out1 + cfblk72_const_val_1;



  always @(posedge clk or posedge reset)
    begin : cfblk136_process
      if (reset == 1'b1) begin
        cfblk136_reg[0] <= 8'b00000000;
        cfblk136_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk136_reg[0] <= cfblk136_reg_next[0];
          cfblk136_reg[1] <= cfblk136_reg_next[1];
        end
      end
    end

  assign cfblk136_out1 = cfblk136_reg[1];
  assign cfblk136_reg_next[0] = cfblk72_out1;
  assign cfblk136_reg_next[1] = cfblk136_reg[0];



  assign cfblk33_out1 = cfblk136_out1 + cfblk104_out1;



  assign cfblk39_out1 = cfblk33_out1 + cfblk39_const_val_1;



  assign cfblk117_out1 = (cfblk39_out1 > 8'b00000000 ? 8'b00000001 :
              8'b00000000);



  assign cfblk80_out1 = cfblk117_out1 + cfblk80_const_val_1;



  assign cfblk84_out1 = (cfblk80_out1 > 8'b00000000 ? 8'b00000001 :
              8'b00000000);



  assign cfblk51_out1 = (cfblk84_out1 > 8'b00000000 ? 8'b00000001 :
              8'b00000000);



  assign dtc_out = cfblk51_out1;



  assign cfblk22_out1 = dtc_out;



  DotProduct_block u_cfblk111_inst (.in1(cfblk22_out1),  // uint8
                                    .in2(cfblk65_out1),  // uint8
                                    .out1(cfblk111_out1)  // uint8
                                    );

  assign Hdl_out = cfblk111_out1;

  assign ce_out = clk_enable;

endmodule  // Subsystem


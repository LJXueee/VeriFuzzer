// -------------------------------------------------------------
// 
// File Name: D:\ljx\code\GUIDANCE-ljx3\slsf_randgen\slsf\reportsneo\2024-06-06-16-53-16\Verilog_hdlsrc\sampleModel1988\sampleModel1988_1_sub\Mysubsystem_12.v
// Created: 2024-08-16 08:26:59
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Mysubsystem_12
// Source Path: sampleModel1988_1_sub/Subsystem/Mysubsystem_12
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Mysubsystem_12
          (clk,
           reset,
           enb,
           In1,
           In2,
           Y,
           Y1);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] In1;  // uint8
  input   [7:0] In2;  // uint8
  output  Y;
  output  Y1;


  reg [7:0] cfblk136_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk136_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk136_out1;  // uint8
  reg [7:0] cfblk131_reg [0:1];  // ufix8 [2]
  wire [7:0] cfblk131_reg_next [0:1];  // ufix8 [2]
  wire [7:0] cfblk131_out1;  // uint8
  wire cfblk1_out1;
  wire signed [31:0] cfblk29_sub_temp;  // sfix32
  wire signed [31:0] cfblk29_1;  // sfix32
  wire signed [31:0] cfblk29_2;  // sfix32
  wire [7:0] cfblk29_out1;  // uint8
  wire cfblk2_out1;


  always @(posedge clk or posedge reset)
    begin : cfblk136_process
      if (reset == 1'b1) begin
        cfblk136_reg[0] <= 8'b00000000;
        cfblk136_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk136_reg[0] <= cfblk136_reg_next[0];
          cfblk136_reg[1] <= cfblk136_reg_next[1];
        end
      end
    end

  assign cfblk136_out1 = cfblk136_reg[1];
  assign cfblk136_reg_next[0] = In2;
  assign cfblk136_reg_next[1] = cfblk136_reg[0];



  always @(posedge clk or posedge reset)
    begin : cfblk131_process
      if (reset == 1'b1) begin
        cfblk131_reg[0] <= 8'b00000000;
        cfblk131_reg[1] <= 8'b00000000;
      end
      else begin
        if (enb) begin
          cfblk131_reg[0] <= cfblk131_reg_next[0];
          cfblk131_reg[1] <= cfblk131_reg_next[1];
        end
      end
    end

  assign cfblk131_out1 = cfblk131_reg[1];
  assign cfblk131_reg_next[0] = In1;
  assign cfblk131_reg_next[1] = cfblk131_reg[0];



  cfblk1 u_cfblk1 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .U(cfblk131_out1),  // uint8
                   .Y(cfblk1_out1)
                   );

  assign cfblk29_1 = {24'b0, cfblk136_out1};
  assign cfblk29_2 = {31'b0, cfblk1_out1};
  assign cfblk29_sub_temp = cfblk29_1 - cfblk29_2;
  assign cfblk29_out1 = cfblk29_sub_temp[7:0];



  cfblk2 u_cfblk2 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .U(cfblk29_out1),  // uint8
                   .Y(cfblk2_out1)
                   );

  assign Y = cfblk2_out1;

  assign Y1 = cfblk1_out1;

endmodule  // Mysubsystem_12

